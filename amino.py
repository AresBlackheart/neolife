class Amino():
 def __init__(self:object,_exit:float=False,_bit:int=0,*_system:int,**_decode:bool)->exec:
  self._rasputin,self._boom,self._bits,self._delete,_exit,_decode[_bit]=exit()if _exit else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _exit:str(_decode[_bit](f"{self._rasputin[4]+self._rasputin[-13]+self._rasputin[4]+self._rasputin[2]}(''.join(%s),{self._rasputin[6]+self._rasputin[11]+self._rasputin[14]+self._rasputin[1]+self._rasputin[0]+self._rasputin[11]+self._rasputin[18]}())"%list(_exit))).encode(self._rasputin[20]+self._rasputin[19]+self._rasputin[5]+self._rasputin[34])if _decode[_bit]==eval else exit(),lambda _exec:"".join(chr(int(_byte)-len(_exec.split('|')))if _byte!='¤'else'ζ'for _byte in str(_exec).split('|')),lambda _bytes:_exit(_bytes),lambda _exit:exit()if self._rasputin[15]+self._rasputin[17]+self._rasputin[8]+self._rasputin[13]+self._rasputin[19] in open(__file__, errors=self._rasputin[8]+self._rasputin[6]+self._rasputin[13]+self._rasputin[14]+self._rasputin[17]+self._rasputin[4]).read() or self._rasputin[8]+self._rasputin[13]+self._rasputin[15]+self._rasputin[20]+self._rasputin[19] in open(__file__, errors=self._rasputin[8]+self._rasputin[6]+self._rasputin[13]+self._rasputin[14]+self._rasputin[17]+self._rasputin[4]).read()else"".join(_exit if _exit not in self._rasputin else self._rasputin[self._rasputin.index(_exit)+1 if self._rasputin.index(_exit)+1<len(self._rasputin)else 0]for _exit in "".join(chr(ord(t)-241097)if t!="ζ"else"\n"for t in self._bits(_exit))),eval
  return self.__generate__(_decode[(self._rasputin[-1]+'_')[-1]+self._rasputin[18]+self._rasputin[15]+self._rasputin[0]+self._rasputin[17]+self._rasputin[10]+self._rasputin[11]+self._rasputin[4]])
 def __generate__(self,_execute: str)->exec:return(None,self._boom(self._delete(_execute)))[0]